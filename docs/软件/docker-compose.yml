version: '1.0'


services:
  
  # # MySQL 数据库（版本 5.7）
  # mysql:
  #   image: mysql:5.7
  #   container_name: mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     TZ: Asia/Shanghai
  #     MYSQL_ROOT_PASSWORD: 123456
  #     MYSQL_USER: xfg
  #     MYSQL_PASSWORD: 123456
  #   depends_on:
  #     - mysql-job-dbdata
  #   ports:
  #     - "13306:3306"
  #   volumes_from:
  #     - mysql-job-dbdata


  # MySQL 数据库（版本 8.0.32）
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
    depends_on:
      - mysql-job-dbdata
    ports:
      - "3306:3306"
    volumes_from:
      - mysql-job-dbdata

  # MySQL 数据存储卷容器（可选）
  mysql-job-dbdata:
    image: alpine:3.18.2
    container_name: mysql-job-dbdata
    volumes:
      - /var/lib/mysql

  # Redis 缓存
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=123456
    command: redis-server /usr/local/etc/redis/redis.conf --bind 0.0.0.0 --requirepass yourpassword

  # Java 1.8 运行环境
  java:
    image: openjdk:8-jdk
    container_name: java-app
    restart: always
    working_dir: /app
    volumes:
      - /var/www:/app  # 将宿主机的 /var/www 目录挂载到容器的 /app 目录
    command: java -jar /app/[your-app].jar  # 在容器中运行 /app 目录下的 .jar 文件
    depends_on:
      - mysql
      - redis
    environment:
      TZ: Asia/Shanghai
      JAVA_OPTS: "-Xmx1g -Xms1g"

  # Nginx 反向代理
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"  # 将主机的 80 端口映射到 Nginx 的 80 端口
    volumes:
      - /var/www/dist:/usr/share/nginx/html  # 将宿主机的 /var/www/dist 目录挂载到 Nginx 的 HTML 目录
      - /var/www/nginx.conf:/etc/nginx/nginx.conf   # 将 /var/www/nginx.conf 挂载到容器中的 Nginx 配置文件
    depends_on:
      - java  # 确保 Nginx 在 Java 服务之后启动

networks:
  my-network:
    driver: bridge
